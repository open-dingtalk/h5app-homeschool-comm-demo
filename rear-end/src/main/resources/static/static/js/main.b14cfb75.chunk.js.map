{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Classes","props","showType","className","students","map","item","i","type","value","userid","name","onChange","addUser","time","onClick","App","state","domain","corpId","authCode","userId","userName","deptList","deptId","classUserList","classId","sendMessage","stuList","title","text","e","console","log","target","msg","this","push","id","setState","alert","axios","post","JSON","stringify","headers","then","res","catch","error","deptOptions","login","chooseDept","deptType","setTime","sendMsg","getClassUserList","getDeptList","get","data","result","details","_this","dd","permission","requestAuthCode","onSuccess","code","success","onFail","err","React","Component","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.b14cfb75.chunk.js","sourcesContent":["import * as dd from 'dingtalk-jsapi';\nimport axios from 'axios';\nimport React from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\n\nfunction Classes (props) {\n    if (props.showType === 1) {\n        return (\n            <div>\n                <h3>{props.className}</h3>\n                <h4>放学通知</h4>\n                {\n                    props.students.map((item, i) =>\n                        <label key={\"stu\" + i}>\n                            <input type=\"checkbox\" value={item.userid} name={item.name} onChange={props.addUser}/>\n                            <span>{item.name}</span>\n                        </label>\n                    )\n                }\n                <p>放学时间：<input type=\"date\" value={props.time} onChange={props.onChange}/></p>\n                <p>\n                    <button onClick={props.onClick}>发送放学通知</button>\n                </p>\n            </div>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nfunction DeptList(props){\n    if(props.showType === 0){\n        return(\n            <div>\n                <h3>选择部门：</h3>\n                {\n                    props.deptList.map((item, i) =>\n                        <div key={i}>\n                            <p><u><span onClick={(e) => props.chooseDept(e, item.deptId, item.deptType, item.name)}>{item.name}</span></u></p>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }else{\n        return <div></div>\n    }\n}\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            //内网穿透工具介绍:\n            // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n            // 替换成后端服务域名\n            domain: \"http://abcdefg.vaiwan.com\",\n            corpId: '',\n            authCode: '',\n            userId: '',\n            userName: '',\n            deptList:[],\n            deptId: 0,\n            students: [],\n            classUserList: [],\n            showType:0,\n            className: '',\n            classId: '',\n            sendMessage:{\n                stuList:[],\n                title:\"放学通知\",\n                text:\"放学时间为\",\n                time:\"\",\n            }\n        }\n    }\n    addUser(e){\n        console.log(e.target.value);\n        console.log(e.target.name);\n        let msg = this.state.sendMessage;\n        msg.stuList.push({\n            id:e.target.value,\n            name:e.target.name\n        })\n        this.setState({\n            sendMessage: msg\n        })\n    }\n    setTime(e){\n        alert(\"time:\", e.target.value)\n        let msg = this.state.sendMessage;\n        msg.time = e.target.value;\n        this.setState({\n            sendMessage: msg\n        })\n    }\n    sendMsg(e){\n        let msg = this.state.sendMessage;\n        msg.classId = this.state.classId;\n        this.setState({\n            sendMessage: msg\n        })\n        axios.post(this.state.domain + \"/homeschool/sendMsg\", JSON.stringify(this.state.sendMessage),\n            {headers:{\"Content-Type\":\"application/json\"}}\n        ).then(res => {\n                alert(\"放学通知已发出！\");\n                this.setState({\n                    sendMessage:{\n                        stuList:[],\n                        title:\"放学通知\",\n                        text:\"放学时间为：\",\n                        time:\"\"\n                    },\n                })\n            }).catch(error => {\n            alert(\"tongzhi err \" + JSON.stringify(error))\n        })\n    }\n    render() {\n        if(this.state.userId === ''){\n            this.login();\n        }\n        let deptOptions;\n        if(this.state.showType === 0){\n            deptOptions =\n                <div>\n                    <h3>选择部门：</h3>\n                    {\n                        this.state.deptList.map((item, i) =>\n                            <div key={i}>\n                                <p><u><span onClick={(e) => this.chooseDept(e, item.deptId, item.deptType, item.name)}>{item.name}</span></u></p>\n                            </div>\n                        )\n                    }\n                </div>\n        }else{\n            deptOptions = <div></div>\n        }\n        return(\n            <div>\n                {deptOptions}\n                <Classes\n                    showType={this.state.showType}\n                    students={this.state.students}\n                    className={this.state.className}\n                    addUser={(e) => this.addUser(e)}\n                    onChange={(e) => this.setTime(e)}\n                    time={this.state.sendMessage.time}\n                    onClick={(e) => this.sendMsg(e)}\n                />\n            </div>\n        )\n    }\n    chooseDept(e, deptId, deptType, name){\n        console.log(\"chooseDept deptId : \" + deptId);\n        if(deptType === 'class'){\n            this.setState({\n                classId: deptId,\n                className: name\n            });\n            this.getClassUserList(deptId);\n        }else{\n            this.setState({\n                deptId: deptId\n            })\n            this.getDeptList(deptId);\n        }\n    }\n    getClassUserList(classId){\n        axios.get(this.state.domain + \"/homeschool/classUserList?classId=\" + classId)\n            .then(res => {\n                // alert(\"class list :\" + JSON.stringify(res.data.data.result.details));\n                alert(\"students --- \")\n                this.setState({\n                    students: res.data.data.result.details,\n                    showType:1\n                });\n                // alert(\"classUserList --- \" + JSON.stringify(this.state.students))\n            }).catch(error => {\n            alert(\"class err \" + JSON.stringify(error))\n        })\n    }\n    getDeptList(deptId){\n        axios.get(this.state.domain + \"/homeschool/deptList?deptId=\" + deptId)\n            .then(res => {\n                // alert(\"dept list :\" + JSON.stringify(res.data.data.result.details));\n                this.setState({\n                    deptList: res.data.data.result.details,\n                    showType:0\n                });\n            }).catch(error => {\n            alert(\"dept err \" + JSON.stringify(error))\n        })\n    }\n\n    login() {\n        let _this = this;\n        dd.runtime.permission.requestAuthCode({\n            corpId: \"ding9f50b15bccd16741\",//企业 corpId\n            onSuccess : function(res) {\n                // 调用成功时回调\n                _this.state.authCode = res.code\n                axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n                ).then(res => {\n                    if (res && res.data.success) {\n                        let userId = res.data.data.userId;\n                        let userName = res.data.data.userName;\n                        alert('登陆成功，你好，' + userName);\n                        _this.setState({\n                            userId:userId,\n                            userName:userName\n                        })\n                        _this.getDeptList(0);\n                    } else {\n                        alert(\"login failed --->\", res);\n                    }\n                }).catch(error => {\n                    alert(\"httpRequest failed --->\",JSON.stringify(error))\n                })\n            },\n            onFail : function(err) {\n                // 调用失败时回调\n                alert(\"requestAuthCode failed --->\",JSON.stringify(err))\n\n            }\n        });\n    }\n\n}\n\nexport default withRouter(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter basename='/'>\n        <Route path={`/`} component={App}></Route>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}